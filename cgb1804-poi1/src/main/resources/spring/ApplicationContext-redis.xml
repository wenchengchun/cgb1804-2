<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

  <!--   <bean id="jedis" class="redis.clients.jedis.Jedis">
        <constructor-arg name="host" value="${redis.host}"></constructor-arg>
        <constructor-arg name="port" value="${redis.port}"></constructor-arg>
    </bean> -->
  
<!--     <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxTotal}"></property>
        <property name="maxIdle" value="${redis.maxIdle}"></property>
    </bean> -->
    <!-- 第一台 -->
<!--     <bean id="info1" class="redis.clients.jedis.JedisShardInfo">
         <constructor-arg name="host" value="${redis.host}"></constructor-arg>
         <constructor-arg name="port" value="${redis.port.a}"></constructor-arg>
    </bean> -->
    <!-- 第二台 -->
<!--     <bean id="info2" class="redis.clients.jedis.JedisShardInfo">
         <constructor-arg name="host" value="${redis.host}"></constructor-arg>
         <constructor-arg name="port" value="${redis.port.b}"></constructor-arg>
    </bean> -->
    <!-- 第三台 -->
   <!--  <bean id="info3" class="redis.clients.jedis.JedisShardInfo">
         <constructor-arg name="host" value="${redis.host}"></constructor-arg>
         <constructor-arg name="port" value="${redis.port.c}"></constructor-arg>
    </bean> -->
    <!--spring 添加redis分片shard  -->
<!--     <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
        <constructor-arg name="poolConfig" ref="poolConfig"></constructor-arg>
        <constructor-arg name="shards">
            <list>
                <ref bean="info1"/>
                <ref bean="info2"/>
                <ref bean="info3"/>
            </list>
        </constructor-arg>        
    </bean> -->
    
    <!-- 实现哨兵的配置 -->
<!--     <bean id="sentinelPool" class="redis.clients.jedis.JedisSentinelPool">
        <constructor-arg name="masterName" value="${redis.sentinel.masterName}"></constructor-arg>
        <constructor-arg name="sentinels">
            <set>
                <value>${redis.sentinel.a}</value>
                <value>${redis.sentinel.b}</value>
                <value>${redis.sentinel.c}</value>
            </set>
        </constructor-arg>
    </bean> -->
    
    <!--集群的配置  -->
<!--     <bean class="redis.clients.jedis.JedisCluster">
        <constructor-arg name="poolConfig" ref="clusterPoolConfig"></constructor-arg>
        <constructor-arg>
            
        </constructor-arg>
    </bean>
    <bean id="clusterPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="1000"></property>
    </bean> -->
      <!-- jedis 配置-->  
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >  
        <!--最大空闲数-->  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <!--最大建立连接等待时间-->  
        <property name="maxWaitMillis" value="${redis.maxWait}" />  
        <!--是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个-->  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
        <property name="maxTotal" value="${redis.maxTotal}" />  
        <property name="minIdle" value="${redis.minIdle}" />  
    </bean>
    <!--l利用spring工厂实例化对象  -->
    <bean id="jedisCluster"  class="com.jt.common.factory.JedisClusterFactory" >  
        <!-- 加载配置文件 -->
        <property name="redisSource">
            <value>classpath:/properties/redis.properties</value>  
        </property>  
        <property name="keyPrefix" value="redis.cluster" />   <!--  属性文件里  key的前缀 -->  
    <!--     <property name="timeout" value="${redis.timeout}" />  
        <property name="maxRedirections" value="6" />  --> 
        <property name="jdc" ref="poolConfig" />  
    </bean> 
</beans>