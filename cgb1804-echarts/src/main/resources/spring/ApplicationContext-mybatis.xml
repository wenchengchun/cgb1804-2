<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
    <!-- spring整合mybatis
        1、整合SqlSessionFactoryBean
        2、整合mapper接口文件
        
     -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- 导入mybatis自己的配置文件 -->
        <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"></property>
        <property name="mapperLocations" value="classpath:/mybatis/mappers/*Mapper.xml"></property>
        <property name="typeAliasesPackage" value="com.jt.dubbo.pojo"></property>
     </bean>
     
     <!-- spring为接口文件创建代理对象 jdk代理 -->
     <bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描接口 生成代理 自动注入 -->
        <property name="basePackage" value="com.jt.order.mapper"></property>
     </bean>
     
     
     <!-- 
            配置sqlSessionFactorybean 的   mybatis配置文集location，mapper文件location
                    配置mapperScannerconfigurer扫描mapper
      -->
     
     
</beans>